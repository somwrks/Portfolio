[
  {
    "title": "AR-Quiz",
    "link": "https://github.com/somwrks/AR-Quiz",
    "detail1": "This project is a test-taking website with facial recognition to detect cheating behaviors. Users will be required to keep looking into the camera during the test, and if they look away or exhibit cheating behaviors, the test will be terminated. The project uses Next.js for the frontend, Flask for the backend, OpenCV/Mediapipe for facial recognition, and Supabase/Prisma for the database.",
    "detail2": "The tech stack is robust and modern, incorporating Next.js and Tailwind CSS for a responsive frontend, React Webcam for camera functionality, and Flask for the backend API. Facial recognition is achieved using OpenCV and Mediapipe, which process images from the user's webcam to detect face and eye movements. The database setup includes Supabase, a scalable PostgreSQL database, with Prisma providing an ORM layer to interact with the database. The backend processes and analyzes the captured images to determine if the user is looking away, which is a potential indicator of cheating.",
    "detail3": "Getting started with the project involves cloning the repository, setting up the backend and frontend environments, and configuring necessary environment variables. The project structure is well-organized, with separate directories for backend code, frontend code, database scripts, and documentation. Developers can contribute to the project by following the provided guidelines and submitting pull requests. The facial recognition logic in the backend captures images periodically during the test, processes them to detect face and eye positions, and determines if the user is cheating based on predefined thresholds. If cheating is detected, the test session is interrupted, and appropriate actions are taken.",
    "icon": "https://i.ibb.co/3SrqMSv/image.png",
    "img1": "https://i.ibb.co/zrH8dgV/image.png",
    "img2": "https://i.ibb.co/3SrqMSv/image.png",
    "img3": "",
    "skills":["NextJS","TailwindCSS","Supabase","OpenCV","Flask","Python"],
    "category":["Website Development", "Artificial Intelligence"]
  },
  {
    "title": "Sentimental Analysis",
    "link": "https://github.com/somwrks/Sentimental-Analysis",
    "detail1": "Next.js application that performs sentiment analysis on text data using a TensorFlow.js model. The application is built with TypeScript and utilizes the TensorFlow.js library for training and evaluating the machine learning model.",
    "detail2": "This project is focused on building a sentiment analysis tool using TensorFlow.js, which can classify text into positive, neutral, or negative sentiments. The process begins with tokenizing and vectorizing the text input, converting each word into its ASCII character codes. This transformation standardizes the text data, ensuring consistency by padding or truncating sequences to a fixed length, known as sequenceLength. The tokenized text is then prepared for model training by creating uniform-length sequences, making the data suitable for input into the neural network.",
    "detail3": "The Project trains a neural network model using TensorFlow.js. The model architecture includes dense layers and dropout layers, designed to handle the tokenized text input and predict sentiment accurately. The training process involves compiling the model with a binary cross-entropy loss function and the Adam optimizer, followed by fitting the model on the preprocessed data. After training, the sentimentAnalysisFunction leverages the trained model to predict the sentiment of new text inputs. By reshaping and padding the input text to match the model’s expected input shape, the function provides a sentiment score, which is interpreted based on predefined thresholds to classify the text as positive, neutral, or negative.",
    "icon": "https://i.ibb.co/b64mHgS/image.png",
    "img1": "",
    "img2": "https://i.ibb.co/b64mHgS/image.png",
    "img3": "",
    "skills":["NextJS","TailwindCSS","Tensorflow"],
    "category":["Website Development","Artificial Intelligence"]
  },
  {
    "title": "EduMon | Hackathon Project",
    "link": "https://github.com/somwrks/EduMon",
    "detail1": "EduMon is a web platform designed to revolutionize the educational experience. It starts with a strong authentication system to ensure a secure environment. Users can select their school and access a wide range of educational resources, including clubs, events, webinars, and competitions. It also offers AI-powered tools for scheduling and to-do lists to help students manage their time effectively.",
    "detail2": "EduMon was built through a collaborative effort, leveraging the latest technology. We combined web development expertise with AI API's to create the platform's functionality. User-friendly design and robust security measures were integral components of the development process.",
    "detail3": "",
    "icon": "https://i.ibb.co/HnpZtXg/image.png",
    "img1": "",
    "img2": "https://i.ibb.co/HnpZtXg/image.png",
    "img3": "https://i.ibb.co/2NhkNyr/image.png",
    "skills":["NextJS","TailwindCSS","Openai API","Clerk API","MongoDB"],
    "category":["Website Development","Artificial Intelligence"]
  },
  {
    "title": "SafeSentry | Hackathon Project",
    "link": "https://github.com/somwrks/SafeSentry",
    "detail1": "SafeSentry is a mobile app that has a wide variety of personal security and safety features that allow high school students to take their own initiative and action towards preventing a possible gun violence threat.",
    "detail2": "SafeSentry features a log-in/authentication system, where a student can use their student ID # or any applicable information (school email, etc…) to register with our app. After being registered and added to their own school ecosystem, the student has the ability to file evidence-based incident reports in the event of suspicious activity or if they get any information about crimes that take place or will take place. Filing reports can often be painstaking and slow, but our app allows a student to securely file one that can make the difference towards the prevention of a school shooting.",
    "detail3": "But then, SafeSentry also has an interactive map feature that shows locations of incident reports, safety exits, safety shelters, etc… Having knowledge of these locations can be lifesaving in the event of an actual shooter being on campus. If an actual threat is on campus, and a student is trying to remain concealed or in hiding, they can quickly use our Emergency Aid feature and with a click of a button, alert local authorities. Local Authorities and School Administrators can also use the timeline location feature to track students in times of emergency through their accounts. Overall, SafeSentry has been equipped with innovative never-before-seen features that can help reduce the casualties in the event of a school shooting or prevent one entirely.",
    "img1": "",
    "icon": "https://i.ibb.co/bN1fTc7/image.png",
    "img2": "https://i.ibb.co/bN1fTc7/image.png",
    "img3": "https://i.ibb.co/8m0zkR2/image.png",
    "skills":["React Native","TailwindCSS","JSON API"],
    "category":["App Development"]
  },
  {
    "title": "BlindChat",
    "link": "https://github.com/somwrks/BlindChat/",
    "detail1": "BlindChat is an anonymous chatting app that has the functionality of real time database update with messages and Google Authentication.",
    "detail2": "",
    "detail3": "Made using Reactjs, Tailwind and Firebase. ",
    "img1": "",
    "icon": "https://i.ibb.co/VgC5jXZ/image.png",
    "img2": "https://i.ibb.co/VgC5jXZ/image.png",
    "img3": "",
    "skills":["NextJS","TailwindCSS","Firestore","Firebase API"],
    "category":["Website Development"]
  },
  {
    "title": "SomFlix",
    "link": "https://github.com/somwrks/SomFlix/",
    "detail1": "Netflix Cloned functional and respnnsive website that fetches real time updated movies, has payment and login authentication.",
    "detail2": "Frontend - NextJS and Tailwind\nBackend - NextJS\nDatabase - Firebase\nLibraries - Material Icons, React Icons and Rest API",
    "detail3": "",
    "icon": "https://i.ibb.co/Ky05SvS/image.png",
    "img1": "https://i.ibb.co/Ky05SvS/image.png",
    "img2": "https://i.ibb.co/p2rM4Np/image.png",
    "img3": "https://i.ibb.co/HPFhkT1/image.png",
    "skills":["NextJS","TailwindCSS","Google API"],
    "category":["Website Development", "Website Design"]
  },
  {
    "title": "Books of Gold",
    "link": "https://github.com/somwrks/Books-of-Gold",
    "detail1": "Full Stack E-Commerce website with payment and login authorization. It has both Admin and Client Side Dashboard along with One-time-password and 2FA Authentication System, making it a potential for large-scale websites.",
    "detail2": "Frontend - ReactJS, and Tailwind Backend - NodeJs, ExpressJs Database - MongoDB Cloud\nFrontend Libraries - Flowbite, Redux, npm overlay navbar, and Sass Backend Libraries - REST API",
    "detail3": "",
    "img1": "",
    "icon": "https://i.ibb.co/SQcbYRR/image.png",
    "img2": "https://i.ibb.co/SQcbYRR/image.png",
    "img3": "",
    "skills":["React","TailwindCSS","NodeJS","ExpressJS","MongoDB","Redux","Rest API"],
    "category":["Website Development","Website Design"]
  },
  {
    "title": "Book Recommendor",
    "link": "https://github.com/somwrks/Book-Recommendor/",
    "detail1": "Website which uses OpenAI API to generate best possible recommendations of books according to user's interests.",
    "detail2": "I used Nextjs as the main javascript framework, Tailwind CSS for CSS and OpenAI API for generating recommendations.",
    "detail3": "",
    "icon": "https://i.ibb.co/FVyZDcv/image.png",
    "img1": "",
    "img2": "https://i.ibb.co/FVyZDcv/image.png",
    "img3": "",
    "skills":["NextJS","TailwindCSS","Openai API"],
    "category":["Website Development","Artificial Intelligence"]
  }
]
